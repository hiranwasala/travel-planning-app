---
- name: Deploy Travel Planning Application (MERN Stack)
  hosts: web_servers  # Should match your inventory group
  become: yes
  vars:
    app_dir: /opt/travel-app
    docker_compose_file: "{{ app_dir }}/docker-compose.yml"
    
  tasks:
    # 1. Install system dependencies
    - name: Install system packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        update_cache: yes
        state: present
      when: ansible_os_family == 'Debian'

    # 2. Install Docker (official way)
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Install Docker components
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    # 3. Install docker-compose (official method)
    - name: Download docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '0755'
        force: yes

    # 4. Configure Docker permissions
    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    # 5. Create application directory
    - name: Ensure app directory exists
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'
        owner: ubuntu
        group: ubuntu

    # 6. Deploy docker-compose file
    - name: Copy docker-compose.yml
      template:
        src: templates/docker-compose.yml.j2  # Should template your compose file
        dest: "{{ docker_compose_file }}"
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    # 7. Docker Hub login
    - name: Authenticate with Docker Hub
      community.docker.docker_login:
        username: "{{ docker_hub_username }}"
        password: "{{ docker_hub_password }}"
        email: "{{ docker_hub_email | default(omit) }}"

    # 8. Pull and run containers
    - name: Start containers
      community.docker.docker_compose:
        project_src: "{{ app_dir }}"
        files:
          - "{{ docker_compose_file }}"
        state: present
        pull: yes
        restart: yes